//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Moonfish.Guerilla.Tags
{
    using Moonfish.Tags;
    using Moonfish.Model;
    using System.IO;
    using System.Collections.Generic;
    using System.Linq;
    
    public partial class GlobalGeometryCompressionInfoBlock : GuerillaBlock, IWriteQueueable
    {
        public Moonfish.Model.Range PositionBoundsX;
        public Moonfish.Model.Range PositionBoundsY;
        public Moonfish.Model.Range PositionBoundsZ;
        public Moonfish.Model.Range TexcoordBoundsX;
        public Moonfish.Model.Range TexcoordBoundsY;
        public Moonfish.Model.Range SecondaryTexcoordBoundsX;
        public Moonfish.Model.Range SecondaryTexcoordBoundsY;
        public override int SerializedSize
        {
            get
            {
                return 56;
            }
        }
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
        public override System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> ReadFields(System.IO.BinaryReader binaryReader)
        {
            System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue = new System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer>(base.ReadFields(binaryReader));
            this.PositionBoundsX = binaryReader.ReadRange();
            this.PositionBoundsY = binaryReader.ReadRange();
            this.PositionBoundsZ = binaryReader.ReadRange();
            this.TexcoordBoundsX = binaryReader.ReadRange();
            this.TexcoordBoundsY = binaryReader.ReadRange();
            this.SecondaryTexcoordBoundsX = binaryReader.ReadRange();
            this.SecondaryTexcoordBoundsY = binaryReader.ReadRange();
            return pointerQueue;
        }
        public override void ReadInstances(System.IO.BinaryReader binaryReader, System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue)
        {
            base.ReadInstances(binaryReader, pointerQueue);
        }
        public override void QueueWrites(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBlamBinaryWriter)
        {
            base.QueueWrites(queueableBlamBinaryWriter);
        }
        public override void Write_(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBlamBinaryWriter)
        {
            base.Write_(queueableBlamBinaryWriter);
            queueableBlamBinaryWriter.Write(this.PositionBoundsX);
            queueableBlamBinaryWriter.Write(this.PositionBoundsY);
            queueableBlamBinaryWriter.Write(this.PositionBoundsZ);
            queueableBlamBinaryWriter.Write(this.TexcoordBoundsX);
            queueableBlamBinaryWriter.Write(this.TexcoordBoundsY);
            queueableBlamBinaryWriter.Write(this.SecondaryTexcoordBoundsX);
            queueableBlamBinaryWriter.Write(this.SecondaryTexcoordBoundsY);
        }
    }
}
