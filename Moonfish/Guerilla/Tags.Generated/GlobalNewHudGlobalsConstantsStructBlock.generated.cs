//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Moonfish.Guerilla.Tags
{
    using JetBrains.Annotations;
    using Moonfish.Tags;
    using Moonfish.Model;
    using System.IO;
    using System.Collections.Generic;
    using System.Linq;
    
    [JetBrains.Annotations.UsedImplicitlyAttribute(ImplicitUseTargetFlags.WithMembers)]
    [TagBlockOriginalNameAttribute("global_new_hud_globals_constants_struct_block")]
    public partial class GlobalNewHudGlobalsConstantsStructBlock : GuerillaBlock, IWriteQueueable
    {
        [Moonfish.Tags.TagReferenceAttribute("null")]
        public Moonfish.Tags.TagReference PrimaryMessageSound;
        [Moonfish.Tags.TagReferenceAttribute("null")]
        public Moonfish.Tags.TagReference SecondaryMessageSound;
        public Moonfish.Tags.StringIdent BootGrieferString;
        public Moonfish.Tags.StringIdent CannotBootGrieferString;
        [Moonfish.Tags.TagReferenceAttribute("shad")]
        public Moonfish.Tags.TagReference TrainingShader;
        [Moonfish.Tags.TagReferenceAttribute("bitm")]
        public Moonfish.Tags.TagReference HumanTrainingTopRight;
        [Moonfish.Tags.TagReferenceAttribute("bitm")]
        public Moonfish.Tags.TagReference HumanTrainingTopCenter;
        [Moonfish.Tags.TagReferenceAttribute("bitm")]
        public Moonfish.Tags.TagReference HumanTrainingTopLeft;
        [Moonfish.Tags.TagReferenceAttribute("bitm")]
        public Moonfish.Tags.TagReference HumanTrainingMiddle;
        [Moonfish.Tags.TagReferenceAttribute("bitm")]
        public Moonfish.Tags.TagReference EliteTrainingTopRight;
        [Moonfish.Tags.TagReferenceAttribute("bitm")]
        public Moonfish.Tags.TagReference EliteTrainingTopCenter;
        [Moonfish.Tags.TagReferenceAttribute("bitm")]
        public Moonfish.Tags.TagReference EliteTrainingTopLeft;
        [Moonfish.Tags.TagReferenceAttribute("bitm")]
        public Moonfish.Tags.TagReference EliteTrainingMiddle;
        public override int SerializedSize
        {
            get
            {
                return 96;
            }
        }
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
        public override System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> ReadFields(Moonfish.Guerilla.BlamBinaryReader binaryReader)
        {
            System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue = new System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer>(base.ReadFields(binaryReader));
            this.PrimaryMessageSound = binaryReader.ReadTagReference();
            this.SecondaryMessageSound = binaryReader.ReadTagReference();
            this.BootGrieferString = binaryReader.ReadStringIdent();
            this.CannotBootGrieferString = binaryReader.ReadStringIdent();
            this.TrainingShader = binaryReader.ReadTagReference();
            this.HumanTrainingTopRight = binaryReader.ReadTagReference();
            this.HumanTrainingTopCenter = binaryReader.ReadTagReference();
            this.HumanTrainingTopLeft = binaryReader.ReadTagReference();
            this.HumanTrainingMiddle = binaryReader.ReadTagReference();
            this.EliteTrainingTopRight = binaryReader.ReadTagReference();
            this.EliteTrainingTopCenter = binaryReader.ReadTagReference();
            this.EliteTrainingTopLeft = binaryReader.ReadTagReference();
            this.EliteTrainingMiddle = binaryReader.ReadTagReference();
            return pointerQueue;
        }
        public override void ReadInstances(Moonfish.Guerilla.BlamBinaryReader binaryReader, System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue)
        {
            base.ReadInstances(binaryReader, pointerQueue);
        }
        public override void Defer(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBinaryWriter)
        {
            base.Defer(queueableBinaryWriter);
        }
        public override void Write(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBinaryWriter)
        {
            base.Write(queueableBinaryWriter);
            queueableBinaryWriter.Write(this.PrimaryMessageSound);
            queueableBinaryWriter.Write(this.SecondaryMessageSound);
            queueableBinaryWriter.Write(this.BootGrieferString);
            queueableBinaryWriter.Write(this.CannotBootGrieferString);
            queueableBinaryWriter.Write(this.TrainingShader);
            queueableBinaryWriter.Write(this.HumanTrainingTopRight);
            queueableBinaryWriter.Write(this.HumanTrainingTopCenter);
            queueableBinaryWriter.Write(this.HumanTrainingTopLeft);
            queueableBinaryWriter.Write(this.HumanTrainingMiddle);
            queueableBinaryWriter.Write(this.EliteTrainingTopRight);
            queueableBinaryWriter.Write(this.EliteTrainingTopCenter);
            queueableBinaryWriter.Write(this.EliteTrainingTopLeft);
            queueableBinaryWriter.Write(this.EliteTrainingMiddle);
        }
    }
}
