//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Moonfish.Guerilla.Tags
{
    using JetBrains.Annotations;
    using Moonfish.Tags;
    using Moonfish.Model;
    using System.IO;
    using System.Collections.Generic;
    using System.Linq;
    
    [JetBrains.Annotations.UsedImplicitlyAttribute(ImplicitUseTargetFlags.WithMembers)]
    [TagClassAttribute("hmt ")]
    [TagBlockOriginalNameAttribute("hud_message_text_block")]
    public partial class HudMessageTextBlock : GuerillaBlock, IWriteQueueable
    {
        public byte[] TextData;
        public HudMessageElementsBlock[] MessageElements = new HudMessageElementsBlock[0];
        public HudMessagesBlock[] Messages = new HudMessagesBlock[0];
        private byte[] fieldpad = new byte[84];
        public override int SerializedSize
        {
            get
            {
                return 108;
            }
        }
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
        public override System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> ReadFields(Moonfish.Guerilla.BlamBinaryReader binaryReader)
        {
            System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue = new System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer>(base.ReadFields(binaryReader));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(1));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(2));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(64));
            this.fieldpad = binaryReader.ReadBytes(84);
            return pointerQueue;
        }
        public override void ReadInstances(Moonfish.Guerilla.BlamBinaryReader binaryReader, System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue)
        {
            base.ReadInstances(binaryReader, pointerQueue);
            this.TextData = base.ReadDataByteArray(binaryReader, pointerQueue.Dequeue());
            this.MessageElements = base.ReadBlockArrayData<HudMessageElementsBlock>(binaryReader, pointerQueue.Dequeue());
            this.Messages = base.ReadBlockArrayData<HudMessagesBlock>(binaryReader, pointerQueue.Dequeue());
        }
        public override void QueueWrites(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBinaryWriter)
        {
            base.QueueWrites(queueableBinaryWriter);
            queueableBinaryWriter.QueueWrite(this.TextData);
            queueableBinaryWriter.QueueWrite(this.MessageElements);
            queueableBinaryWriter.QueueWrite(this.Messages);
        }
        public override void Write(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBinaryWriter)
        {
            base.Write(queueableBinaryWriter);
            queueableBinaryWriter.WritePointer(this.TextData);
            queueableBinaryWriter.WritePointer(this.MessageElements);
            queueableBinaryWriter.WritePointer(this.Messages);
            queueableBinaryWriter.Write(this.fieldpad);
        }
    }
}
namespace Moonfish.Tags
{
    
    public partial struct TagClass
    {
        public static TagClass Hmt = ((TagClass)("hmt "));
    }
}
