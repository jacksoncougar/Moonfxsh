//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Moonfish.Guerilla.Tags
{
    using JetBrains.Annotations;
    using Moonfish.Tags;
    using Moonfish.Model;
    using Moonfish.Guerilla;
    using System.IO;
    using System.Collections.Generic;
    using System.Linq;
    
    [JetBrains.Annotations.UsedImplicitlyAttribute(ImplicitUseTargetFlags.WithMembers)]
    [TagBlockOriginalNameAttribute("scenario_screen_effect_reference_block")]
    public partial class ScenarioScreenEffectReferenceBlock : GuerillaBlock, IWriteDeferrable
    {
        private byte[] fieldpad = new byte[16];
        [Moonfish.Tags.TagReferenceAttribute("egor")]
        public Moonfish.Tags.TagReference ScreenEffect;
        public Moonfish.Tags.StringIdent PrimaryInput;
        public Moonfish.Tags.StringIdent SecondaryInput;
        private byte[] fieldskip = new byte[2];
        private byte[] fieldskip0 = new byte[2];
        public override int SerializedSize
        {
            get
            {
                return 36;
            }
        }
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
        public override System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> ReadFields(Moonfish.Guerilla.BlamBinaryReader binaryReader)
        {
            System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue = new System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer>(base.ReadFields(binaryReader));
            this.fieldpad = binaryReader.ReadBytes(16);
            this.ScreenEffect = binaryReader.ReadTagReference();
            this.PrimaryInput = binaryReader.ReadStringIdent();
            this.SecondaryInput = binaryReader.ReadStringIdent();
            this.fieldskip = binaryReader.ReadBytes(2);
            this.fieldskip0 = binaryReader.ReadBytes(2);
            return pointerQueue;
        }
        public override void ReadInstances(Moonfish.Guerilla.BlamBinaryReader binaryReader, System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue)
        {
            base.ReadInstances(binaryReader, pointerQueue);
        }
        public override void DeferReferences(Moonfish.Guerilla.LinearBinaryWriter writer)
        {
            base.DeferReferences(writer);
        }
        public override void Write(Moonfish.Guerilla.LinearBinaryWriter writer)
        {
            base.Write(writer);
            writer.Write(this.fieldpad);
            writer.Write(this.ScreenEffect);
            writer.Write(this.PrimaryInput);
            writer.Write(this.SecondaryInput);
            writer.Write(this.fieldskip);
            writer.Write(this.fieldskip0);
        }
    }
}
