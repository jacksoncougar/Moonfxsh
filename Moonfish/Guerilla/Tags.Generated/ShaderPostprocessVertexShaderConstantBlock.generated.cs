//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Moonfish.Guerilla.Tags
{
    using Moonfish.Tags;
    using Moonfish.Model;
    using System.IO;
    using System.Collections.Generic;
    using System.Linq;
    
    public partial class ShaderPostprocessVertexShaderConstantBlock : GuerillaBlock, IWriteQueueable
    {
        public byte RegisterIndex;
        public byte RegisterBank;
        public float Data;
        public float Data0;
        public float Data1;
        public float Data2;
        public override int SerializedSize
        {
            get
            {
                return 18;
            }
        }
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
        public override System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> ReadFields(System.IO.BinaryReader binaryReader)
        {
            System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue = new System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer>(base.ReadFields(binaryReader));
            this.RegisterIndex = binaryReader.ReadByte();
            this.RegisterBank = binaryReader.ReadByte();
            this.Data = binaryReader.ReadSingle();
            this.Data0 = binaryReader.ReadSingle();
            this.Data1 = binaryReader.ReadSingle();
            this.Data2 = binaryReader.ReadSingle();
            return pointerQueue;
        }
        public override void ReadInstances(System.IO.BinaryReader binaryReader, System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue)
        {
            base.ReadInstances(binaryReader, pointerQueue);
        }
        public override void QueueWrites(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBlamBinaryWriter)
        {
            base.QueueWrites(queueableBlamBinaryWriter);
        }
        public override void Write_(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBlamBinaryWriter)
        {
            base.Write_(queueableBlamBinaryWriter);
            queueableBlamBinaryWriter.Write(this.RegisterIndex);
            queueableBlamBinaryWriter.Write(this.RegisterBank);
            queueableBlamBinaryWriter.Write(this.Data);
            queueableBlamBinaryWriter.Write(this.Data0);
            queueableBlamBinaryWriter.Write(this.Data1);
            queueableBlamBinaryWriter.Write(this.Data2);
        }
    }
}
