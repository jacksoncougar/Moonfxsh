//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Moonfish.Guerilla.Tags
{
    using JetBrains.Annotations;
    using Moonfish.Tags;
    using Moonfish.Model;
    using System.IO;
    using System.Collections.Generic;
    using System.Linq;
    
    [JetBrains.Annotations.UsedImplicitlyAttribute(ImplicitUseTargetFlags.WithMembers)]
    [TagBlockOriginalNameAttribute("sound_effect_struct_definition_block")]
    public partial class SoundEffectStructDefinitionBlock : GuerillaBlock, IWriteQueueable
    {
        [Moonfish.Tags.TagReferenceAttribute("<fx>")]
        public Moonfish.Tags.TagReference TagReference;
        public SoundEffectComponentBlock[] Components = new SoundEffectComponentBlock[0];
        public SoundEffectOverridesBlock[] SoundEffectOverridesBlock = new SoundEffectOverridesBlock[0];
        public byte[] SoundEffectHardwareFormatDataDefinition;
        public PlatformSoundEffectCollectionBlock[] PlatformSoundEffectCollectionBlock = new PlatformSoundEffectCollectionBlock[0];
        public override int SerializedSize
        {
            get
            {
                return 40;
            }
        }
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
        public override System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> ReadFields(Moonfish.Guerilla.BlamBinaryReader binaryReader)
        {
            System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue = new System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer>(base.ReadFields(binaryReader));
            this.TagReference = binaryReader.ReadTagReference();
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(16));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(12));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(1));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(20));
            return pointerQueue;
        }
        public override void ReadInstances(Moonfish.Guerilla.BlamBinaryReader binaryReader, System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue)
        {
            base.ReadInstances(binaryReader, pointerQueue);
            this.Components = base.ReadBlockArrayData<SoundEffectComponentBlock>(binaryReader, pointerQueue.Dequeue());
            this.SoundEffectOverridesBlock = base.ReadBlockArrayData<SoundEffectOverridesBlock>(binaryReader, pointerQueue.Dequeue());
            this.SoundEffectHardwareFormatDataDefinition = base.ReadDataByteArray(binaryReader, pointerQueue.Dequeue());
            this.PlatformSoundEffectCollectionBlock = base.ReadBlockArrayData<PlatformSoundEffectCollectionBlock>(binaryReader, pointerQueue.Dequeue());
        }
        public override void Defer(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBinaryWriter)
        {
            base.Defer(queueableBinaryWriter);
            queueableBinaryWriter.Defer(this.Components);
            queueableBinaryWriter.Defer(this.SoundEffectOverridesBlock);
            queueableBinaryWriter.Defer(this.SoundEffectHardwareFormatDataDefinition);
            queueableBinaryWriter.Defer(this.PlatformSoundEffectCollectionBlock);
        }
        public override void Write(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBinaryWriter)
        {
            base.Write(queueableBinaryWriter);
            queueableBinaryWriter.Write(this.TagReference);
            queueableBinaryWriter.WritePointer(this.Components);
            queueableBinaryWriter.WritePointer(this.SoundEffectOverridesBlock);
            queueableBinaryWriter.WritePointer(this.SoundEffectHardwareFormatDataDefinition);
            queueableBinaryWriter.WritePointer(this.PlatformSoundEffectCollectionBlock);
        }
    }
}
