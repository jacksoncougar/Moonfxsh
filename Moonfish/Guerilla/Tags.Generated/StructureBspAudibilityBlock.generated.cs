//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Moonfish.Guerilla.Tags
{
    using Moonfish.Tags;
    using Moonfish.Model;
    using System.IO;
    using System.Collections.Generic;
    using System.Linq;
    
    public partial class StructureBspAudibilityBlock : GuerillaBlock, IWriteQueueable
    {
        public int DoorPortalCount;
        public Moonfish.Model.Range ClusterDistanceBounds;
        public DoorEncodedPasBlock[] EncodedDoorPas = new DoorEncodedPasBlock[0];
        public ClusterDoorPortalEncodedPasBlock[] ClusterDoorPortalEncodedPas = new ClusterDoorPortalEncodedPasBlock[0];
        public AiDeafeningEncodedPasBlock[] AiDeafeningPas = new AiDeafeningEncodedPasBlock[0];
        public EncodedClusterDistancesBlock[] ClusterDistances = new EncodedClusterDistancesBlock[0];
        public OccluderToMachineDoorMapping[] MachineDoorMapping = new OccluderToMachineDoorMapping[0];
        public override int SerializedSize
        {
            get
            {
                return 52;
            }
        }
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
        public override System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> ReadFields(System.IO.BinaryReader binaryReader)
        {
            System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue = new System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer>(base.ReadFields(binaryReader));
            this.DoorPortalCount = binaryReader.ReadInt32();
            this.ClusterDistanceBounds = binaryReader.ReadRange();
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(4));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(4));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(4));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(1));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(1));
            return pointerQueue;
        }
        public override void ReadInstances(System.IO.BinaryReader binaryReader, System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue)
        {
            base.ReadInstances(binaryReader, pointerQueue);
            this.EncodedDoorPas = base.ReadBlockArrayData<DoorEncodedPasBlock>(binaryReader, pointerQueue.Dequeue());
            this.ClusterDoorPortalEncodedPas = base.ReadBlockArrayData<ClusterDoorPortalEncodedPasBlock>(binaryReader, pointerQueue.Dequeue());
            this.AiDeafeningPas = base.ReadBlockArrayData<AiDeafeningEncodedPasBlock>(binaryReader, pointerQueue.Dequeue());
            this.ClusterDistances = base.ReadBlockArrayData<EncodedClusterDistancesBlock>(binaryReader, pointerQueue.Dequeue());
            this.MachineDoorMapping = base.ReadBlockArrayData<OccluderToMachineDoorMapping>(binaryReader, pointerQueue.Dequeue());
        }
        public override void QueueWrites(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBlamBinaryWriter)
        {
            base.QueueWrites(queueableBlamBinaryWriter);
            queueableBlamBinaryWriter.QueueWrite(this.EncodedDoorPas);
            queueableBlamBinaryWriter.QueueWrite(this.ClusterDoorPortalEncodedPas);
            queueableBlamBinaryWriter.QueueWrite(this.AiDeafeningPas);
            queueableBlamBinaryWriter.QueueWrite(this.ClusterDistances);
            queueableBlamBinaryWriter.QueueWrite(this.MachineDoorMapping);
        }
        public override void Write_(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBlamBinaryWriter)
        {
            base.Write_(queueableBlamBinaryWriter);
            queueableBlamBinaryWriter.Write(this.DoorPortalCount);
            queueableBlamBinaryWriter.Write(this.ClusterDistanceBounds);
            queueableBlamBinaryWriter.WritePointer(this.EncodedDoorPas);
            queueableBlamBinaryWriter.WritePointer(this.ClusterDoorPortalEncodedPas);
            queueableBlamBinaryWriter.WritePointer(this.AiDeafeningPas);
            queueableBlamBinaryWriter.WritePointer(this.ClusterDistances);
            queueableBlamBinaryWriter.WritePointer(this.MachineDoorMapping);
        }
    }
}
