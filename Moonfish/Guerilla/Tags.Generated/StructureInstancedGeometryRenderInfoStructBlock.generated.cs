//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Moonfish.Guerilla.Tags
{
    using JetBrains.Annotations;
    using Moonfish.Tags;
    using Moonfish.Model;
    using System.IO;
    using System.Collections.Generic;
    using System.Linq;
    
    [JetBrains.Annotations.UsedImplicitlyAttribute(ImplicitUseTargetFlags.WithMembers)]
    [TagBlockOriginalNameAttribute("structure_instanced_geometry_render_info_struct_block")]
    public partial class StructureInstancedGeometryRenderInfoStructBlock : GuerillaBlock, IWriteQueueable
    {
        public GlobalGeometrySectionInfoStructBlock SectionInfo = new GlobalGeometrySectionInfoStructBlock();
        public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo = new GlobalGeometryBlockInfoStructBlock();
        public StructureBspClusterDataBlockNew[] RenderData = new StructureBspClusterDataBlockNew[0];
        public GlobalGeometrySectionStripIndexBlock[] IndexReorderTable = new GlobalGeometrySectionStripIndexBlock[0];
        public override int SerializedSize
        {
            get
            {
                return 92;
            }
        }
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
        public override System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> ReadFields(Moonfish.Guerilla.BlamBinaryReader binaryReader)
        {
            System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue = new System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer>(base.ReadFields(binaryReader));
            pointerQueue = new System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer>(pointerQueue.Concat(this.SectionInfo.ReadFields(binaryReader)));
            pointerQueue = new System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer>(pointerQueue.Concat(this.GeometryBlockInfo.ReadFields(binaryReader)));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(68));
            pointerQueue.Enqueue(binaryReader.ReadBlamPointer(2));
            return pointerQueue;
        }
        public override void ReadInstances(Moonfish.Guerilla.BlamBinaryReader binaryReader, System.Collections.Generic.Queue<Moonfish.Tags.BlamPointer> pointerQueue)
        {
            base.ReadInstances(binaryReader, pointerQueue);
            this.SectionInfo.ReadInstances(binaryReader, pointerQueue);
            this.GeometryBlockInfo.ReadInstances(binaryReader, pointerQueue);
            this.RenderData = base.ReadBlockArrayData<StructureBspClusterDataBlockNew>(binaryReader, pointerQueue.Dequeue());
            this.IndexReorderTable = base.ReadBlockArrayData<GlobalGeometrySectionStripIndexBlock>(binaryReader, pointerQueue.Dequeue());
        }
        public override void Defer(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBinaryWriter)
        {
            base.Defer(queueableBinaryWriter);
            this.SectionInfo.Defer(queueableBinaryWriter);
            this.GeometryBlockInfo.Defer(queueableBinaryWriter);
            queueableBinaryWriter.Defer(this.RenderData);
            queueableBinaryWriter.Defer(this.IndexReorderTable);
        }
        public override void Write(Moonfish.Guerilla.QueueableBlamBinaryWriter queueableBinaryWriter)
        {
            base.Write(queueableBinaryWriter);
            this.SectionInfo.Write(queueableBinaryWriter);
            this.GeometryBlockInfo.Write(queueableBinaryWriter);
            queueableBinaryWriter.WritePointer(this.RenderData);
            queueableBinaryWriter.WritePointer(this.IndexReorderTable);
        }
    }
}
